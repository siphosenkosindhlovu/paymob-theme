.page-section {
  @extend .container-fluid;
  @extend .py-5;
  @include media-breakpoint-up(lg) {
    @extend .py-lg-14;
  }
}

$color-schemes: (
  (
    name: blue-light-1,
    bg: $blue-light-1,
    heading: $blue,
    text: $white,
    list-marker: $blue,
  ),
  (
    name: navy,
    bg: $navy,
    text: white,
    heading: $blue-light-1,
  ),
  (
    name: blue,
    bg: $blue,
    text: white,
    heading: $blue-light-1,
  ),(
    name: blue-light-1,
    bg: $blue-light-1,
    heading: $blue,
    text: $white,
    list-marker: $blue,
  ),
);

.key-features {
  @for $i from 1 to 5 {
    $random: random(3);
    &:nth-child(#{$i}){
      background-color: map-get(nth($color-schemes, $random), bg);
      color: map-get(nth($color-schemes, $random), text);
      @if (map-has-key($map: nth($color-schemes, $random), $key: heading)) {
        h2,
        h3 {
          color: map-get($map: nth($color-schemes, $random), $key: heading);
        }
      }
      @if (map-has-key($map: nth($color-schemes, $random), $key: list-marker)) {
        li:before {
          background: map-get($map: nth($color-schemes, $random), $key: list-marker);
        }
      }
    }
  }
  &:nth-child(odd) {
    .row {
      @include media-breakpoint-up(md) {
        flex-direction: row-reverse;
      }
    }
  }
}

.colored-showcase {
  @for $i from 1 to 5 {
    & > div:nth-child(#{$i}n) > .item {
      background-color: map-get(nth($color-schemes, $i), bg);
      color: map-get(nth($color-schemes, $i), text);
      @if (map-has-key($map: nth($color-schemes, $i), $key: heading)) {
        h2,
        h3,
        .highlighted {
          color: map-get($map: nth($color-schemes, $i), $key: heading);
        }
      }
      @if (map-has-key($map: nth($color-schemes, $i), $key: list-marker)) {
        li:before {
          background: map-get($map: nth($color-schemes, $i), $key: list-marker);
        }
      }
    }
  }
}

@for $i from 1 to length($color-schemes) {
  .key-feature-#{map-get(nth($color-schemes, $i), name)} {
    background-color: map-get(nth($color-schemes, $i), bg);
    color: map-get(nth($color-schemes, $i), text);
    @if (map-has-key($map: nth($color-schemes, $i), $key: heading)) {
      h2,
      h3 {
        color: map-get($map: nth($color-schemes, $i), $key: heading);
      }
    }
    @if (map-has-key($map: nth($color-schemes, $i), $key: list-marker)) {
      li:before {
        background: map-get($map: nth($color-schemes, $i), $key: list-marker);
      }
    }
  }
}

.two-cols {
  @include media-breakpoint-up(lg) {
    column-count: 2;
  }
}

@each $slug, $value in $theme-colors {
  .has-#{$slug}-background-color {
    background-color: $value;
  }
}